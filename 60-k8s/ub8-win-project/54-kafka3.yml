apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka3
  namespace: app
spec:
  serviceName: kafka3
  replicas: 1
  selector:
    matchLabels:
      app: kafka3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: kafka3
    spec:
      containers:
        - name: kafka3
          env:
            - name: KAFKA_NODE_ID
              value: "3"
            - name: KAFKA_CLUSTER_ID
              value: "HmzZhsFpS3KttgRTb4zLsA"
            - name: KAFKA_JMX_OPTS
              value: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.rmi.port=1099 -Djava.rmi.server.hostname=kafka3"
            - name: KAFKA_HEAP_OPTS
              value: "-Xms256M -Xmx512M"
            - name: KAFKA_ARGS
              value: "--override advertised.listeners=PLAINTEXT://kafka3:9092,CONTROLLER://kafka3:9093 --override num.partitions=3 --override broker.id=2 --override controller.quorum.voters=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093 --override leader.imbalance.check.interval.seconds=30 --override offsets.topic.replication.factor=2 --override default.replication.factor=2 --override log.retention.bytes=90000000000"
          image: neowu/kafka:3.0.0-kraft
          ports:
            - containerPort: 9092
            - containerPort: 9093
          volumeMounts:
            - name: data
              mountPath: /data
      priorityClassName: critical
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka3
  namespace: app
spec:
  clusterIP: None
  ports:
    - port: 9092
  selector:
    app: kafka3
